// DO NOT EDIT: This file is auto-generated by generate-schema/index.ts
import { z } from "npm:zod";

/**
 * Types that can be returned from webview results.
 */
export type ResultType =
  | {
    $type: "string";

    value: string;
  }
  | {
    $type: "boolean";

    value: boolean;
  }
  | {
    $type: "float";

    value: number;
  }
  | {
    $type: "size";

    value: {
      /** The height of the window in logical pixels. */
      height: number;
      /** The ratio between physical and logical sizes. */
      scale_factor: number;
      /** The width of the window in logical pixels. */
      width: number;
    };
  };

/**
 * Responses from the webview to the client.
 */
export type WebViewResponse =
  | {
    $type: "ack";

    id: string;
  }
  | {
    $type: "result";

    id: string;

    result: ResultType;
  }
  | {
    $type: "err";

    id: string;

    message: string;
  };

export const ResultType: z.ZodType<ResultType> = z.discriminatedUnion("$type", [
  z.object({ $type: z.literal("string"), value: z.string() }),
  z.object({ $type: z.literal("boolean"), value: z.boolean() }),
  z.object({ $type: z.literal("float"), value: z.number() }),
  z.object({
    $type: z.literal("size"),
    value: z.object({
      height: z.number(),
      scale_factor: z.number(),
      width: z.number(),
    }),
  }),
]);

export const WebViewResponse: z.ZodType<WebViewResponse> = z.discriminatedUnion(
  "$type",
  [
    z.object({ $type: z.literal("ack"), id: z.string() }),
    z.object({
      $type: z.literal("result"),
      id: z.string(),
      result: ResultType,
    }),
    z.object({ $type: z.literal("err"), id: z.string(), message: z.string() }),
  ],
);
